{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","list","map","option","btn","type","onClick","data-button-type","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","dataset","buttonType","persentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,+B,iBCA7DD,EAAOC,QAAU,CAAC,KAAO,2B,sKC0BVC,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEJ,UAAWC,IAAEI,IACbC,KAAK,SACLC,QAASR,EACTS,mBAAkBJ,EAJpB,SAMGA,KAPIA,SCQFK,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCiBQC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIjB,UAAWC,IAAEC,KAAjB,UACE,wCAAWW,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCASC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCgEEC,EA5DH,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACTR,EADS,KACHS,EADG,OAEcD,mBAAS,GAFvB,mBAETP,EAFS,KAEAS,EAFA,OAGMF,mBAAS,GAHf,mBAGTN,EAHS,KAGJS,EAHI,KA0BVC,EAAqB,WACzB,OAAOZ,EAAOC,EAAUC,GAQ1B,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CAASU,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAnCuB,SAAA2B,GAG7B,OAFeA,EAAMC,OAAOC,QAAQC,YAGlC,IAAK,OAEH,YADAP,GAAQ,SAAAT,GAAI,OAAIA,EAAO,KAGzB,IAAK,UAEH,YADAU,GAAW,SAAAT,GAAO,OAAIA,EAAU,KAGlC,IAAK,MAEH,YADAU,GAAO,SAAAT,GAAG,OAAIA,EAAM,KAGtB,QACE,aAqBDU,IACC,cAAC,EAAD,CAASf,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBApB8B,WACtC,IAAMa,EAAaC,KAAKC,MAAOnB,EAAOY,IAAwB,KAC9D,OAAOK,GAA0B,EAkBLG,OAIxB,cAAC,EAAD,CAAcd,QAAQ,0BCvD9Be,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ace8bb90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__3gSyQ\",\"btn\":\"FeedbackOptions_btn__daixE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1sryl\"};","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className={s.list}>\n      {options.map(option => (\n        <li key={option}>\n          <button\n            className={s.btn}\n            type=\"button\"\n            onClick={onLeaveFeedback}\n            data-button-type={option}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.list}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport './App.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const feedbackOptionBtnClick = event => {\n    const option = event.target.dataset.buttonType;\n\n    switch (option) {\n      case 'good':\n        setGood(good => good + 1);\n        return;\n\n      case 'neutral':\n        setNeutral(neutral => neutral + 1);\n        return;\n\n      case 'bad':\n        setBad(bad => bad + 1);\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const persentage = Math.round((good / countTotalFeedback()) * 100);\n    return persentage ? persentage : 0;\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={feedbackOptionBtnClick}\n        />\n      </Section>\n      {countTotalFeedback() ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}